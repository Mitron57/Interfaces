name: CD

on:
  push:
    branches: master
  pull_request:
    branches: master

env:
  TOKEN: ${{ secrets.TOKEN }}
  NUGETTOKEN: ${{ secrets.NUGETTOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  buildAndDeploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Build
      run: dotnet build -c Release
    - name: Generate PDF with code
      if: github.event_name == 'push'
      run: |
        export REPOSITORY_NAME=$(basename ${{ github.repository }})
        wget https://raw.githubusercontent.com/linksplatform/Scripts/master/SingleProjectRepository/format-csharp-files.py
        wget https://raw.githubusercontent.com/linksplatform/Scripts/master/SingleProjectRepository/format-document.sh
        wget https://raw.githubusercontent.com/linksplatform/Scripts/master/SingleProjectRepository/generate-pdf.sh
        bash ./generate-pdf.sh
    - name: Publish documentation to gh-pages branch
      if: github.event_name == 'push'
      run: |
        export REPOSITORY_NAME=$(basename ${{ github.repository }})
        wget https://raw.githubusercontent.com/linksplatform/Scripts/master/SingleProjectRepository/docfx.json
        wget https://raw.githubusercontent.com/linksplatform/Scripts/master/SingleProjectRepository/toc.yml
        wget https://raw.githubusercontent.com/linksplatform/Scripts/master/SingleProjectRepository/publish-docs.sh
        bash ./publish-docs.sh
    - name: Publish NuGet package
      if: github.event_name == 'push'
      run: |
        export REPOSITORY_NAME=$(basename ${{ github.repository }})
        bash ./push-nuget.sh
    - name: Publish release
      if: github.event_name == 'push'
      run: |
        export REPOSITORY_NAME=$(basename ${{ github.repository }})
        bash ./publish-release.sh

  pushNuGetToGitHubPackageRegistry:
    needs: buildAndDeploy
    if: github.event_name == 'push'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - uses: warrenbuckley/Setup-Nuget@v1
      - name: Publish to GitHub Package Registry
        run: |
          dotnet pack -c Release
          nuget source Add -Name "GitHub" -Source "https://nuget.pkg.github.com/linksplatform/index.json" -UserName linksplatform -Password ${{ secrets.GITHUB_TOKEN }}
          nuget push **/*.nupkg -Source "GitHub" -SkipDuplicate
